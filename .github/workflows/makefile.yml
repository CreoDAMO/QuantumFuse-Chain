name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'  # Updated to match your project's Python version

    - name: Install SDL2 dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev

    - name: Install dependencies
      run: |
        make install

    - name: Install web dependencies
      run: |
        make web-install

    - name: Build the project
      run: |
        make build

    - name: Run tests
      env:
        SKIP_TESTS: ${{ github.event_name == 'pull_request' && 'false' || 'true' }}
      run: |
        make test

    - name: Lint code
      continue-on-error: true  # Optional: don't fail the build for linting issues
      run: |
        make lint

    - name: Format code
      run: |
        make format

    - name: Test Flask application
      run: |
        python -m unittest discover -v tests

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        make install
        make web-install

    - name: Deploy to production
      run: |
        echo "Deploying application..."
        # Add your deployment scripts here
        # For example, you might use gunicorn to run your Flask app:
        # gunicorn wsgi:app
